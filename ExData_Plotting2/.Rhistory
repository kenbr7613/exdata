make.power <- function(n){
pow <- function(x) {
x^n
}
pow
}
cube <- make.power(3)
square <- make.power(2)
cube(3)
square(3)
R.version.string
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z<- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
mt_sqrt <- sqrt(z-1)
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5,55,-1,6)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse = " ")
c(my_char,"Kenneth")
my_name = c(my_char,"Kenneth")
my_name
paste(my_name,collapse = " ")
paste("Hellow","world!", sep=" ")
paste("Hello","world!", sep=" ")
paste(1:3,c("X",Y","Z"), sep =""")
paste(1:3,c("X","Y","Z"), sep =""")
)
_
""
paste(1:3,c("X","Y","Z"), sep =")
""
)
"
paste(1:3,c("X","Y","Z"), sep ="")
paste(LETTERS, 1:4,sep="-")
runif(1)
runif(1)
?runif
x <- 1:4
mean(x)
x <- list(a =1:4, b=rnorm(10),c=rnorm(20,1),d=rnorm(100,5))
x
lapply(x,mean)
mean(x)
sapply(x,mean)
x <- matrix(rnorm(20),5,4)
x
apply(x,2,mean)
x <- matrix(1:20,5,4)
x
apply(x,2,mean)
apply(x,1,mean)
apply(x,c(1,2),mean)
rpois(10,1)
rpois(10,1)
rpois(10,1)
rpois(10,1)
rpois(10,2)
rpois(10,2)
rpois(10,2)
rpois(10,2)
rpois(10,2)
rpois(10,2)
rpois(10,20)
rpois(10,100)
ppois(2,2)
ppois(2,2)
ppois(2,2)
ppois(2,2)
set.seed(20)
x <- rnorm(100)
e <- rnorn(100,0,2)
e <- rnorm(100,0,2)
x
e
y <- .5 + 2*x+e
summary(y)
plot(x,y)
set.seed(1)
x <- rnorm(100)
log.mu <- .5 + .3*x
y <- rpois(100,exp(log.mu))
summary(y)
plot(x,y)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
letters
sample(1:10)
sample(1:10)
system.time()
system.time(sample(1:10))
system.time(readLines("http://www.jhsph.edu"))
hilbert <- function {}
hilbert <- function(n) {
i <- 1:n
1 / outer(i=1,i,"+")
}
x <-hilbert(1000)
hilbert <- function(n) {
i <- 1:n
1 / outer(i-1,i,"+")
}
x <-hilbert(1000)
system.time(svd(x))
x
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
f(2)
rnorm(5)
x = rnorm(20)
y = rnorm(20)
xyplot()
lattice
library(lattice)
xyplot()
xyplot(y ~ x | f * g, data)
xyplot(y ~ x)
plot(x,y)
xyplot(y ~ x)
plot(x,y)
xyplot(y ~ x)
library(datasets)
xyplot(Ozone ~ Wind, data = airquality)
airquality = transform(airquality, Month = factor(Month))
head(Airquality)
head(airquality)
xyplot(Ozone ~ Wind | Month, data = airquality)
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p = xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
print(p)
set.seed(100)
x = rnorm(100)
f = rep(0:1, each = 50)
y = x + f - f*x + rnorm(100, sd = .5)
f = factor(f, labels = c("Group 1", "Group 2"))
xyplot(y ~ x | f layout = c(2,1))
f
xyplot(y ~ x | f, layout = c(2,1))
xyplot(y ~ x | f, panel = function(x,y,...) {
panel.xyplot(x,y,...)
panel.abline(h=median(y), lty = 2)
})
xyplot(y ~ x | f, panel = function(x,y,...) {
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2) })
library(ggplot)
install.packages(ggplot2)
library(ggplot2)
install.packages(ggplot2)
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
library(ggplot2)
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color = dvr)
qplot(displ, hwy, data=mpg, color = drv)
qplot(displ, hwy, data=mpg, color = drv, geom=c("point","smooth"))
qplot(displ, hwy, data=mpg, geom=c("point","smooth"))
qplot( hwy, data=mpg)
qplot( hwy, data=mpg, fill=drv)
qplot( hwy, data=mpg, fill=drv, geom=c("point","smooth"))
qplot( hwy, data=mpg, fill=drv
)
qplot(displ, hwy, data=mpg, gacets = .~drv)
qplot(displ, hwy, data=mpg, facets = .~drv)
qplot(hwy, data=mpg, facets = .~drv)
qplot(displ, hwy, data=mpg, facets = .~drv)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
head(maacs)
str(maacs)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet)
xyplot(weight ~ Time | BodyWeight)
xyplot(weight ~ Time | Diet, BodyWeight)
?xyplot
?xyplot
data(airquality)
p = xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
ggplot(x,y)
?ggplot
ggplot(aes(x,y))
movies
ggplot(movies, aes(votes,rating))
qplot(votes, rating, data=movies)
qplot(votes, rating, data=movies) + geom_smooth()
qplot(votes, rating, data=movies) + stats_smooth("loess")
qplot(votes, rating, data=movies, smooth = "loess")
qplot(votes, rating, data=movies)
qplot(votes, rating, data=movies, panel = panel.loess)
qplot(votes, rating, data=movies) + geom_smooth()
set.seed(1234)
par(mar = c(0,0,0,0))
x = rnorm(12,mean=rep(1:3, each = 4), sd=.2)
y = rnorm(12,mean=rep(c(1,2,1), each = 4), sd=.2)
plot(x,y,col="blue", pch = 19, cex = 2)
text(x+.05, y+.05, labels=as.character(1:12))
dataFrame = data.frame(x=x, y=y)
dist(dataFrame)
distxy = dist(dataFrame)
hClustering = hclust(distxy)
plot(hClustering)
myplclust <- function(hclust, lab = hclust$labels, lab.col = rep(1, length(hclust$labels)),
hang = 0.1, ...) {
y <- rep(hclust$height, 2)
x <- as.numeric(hclust$merge)
y <- y[which(x < 0)]
x <- x[which(x < 0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels = FALSE, hang = hang, ...)
text(x = x, y = y[hclust$order] - (max(hclust$height) * hang), labels = lab[hclust$order],
col = lab.col[hclust$order], srt = 90, adj = c(1, 0.5), xpd = NA, ...)
}
myplclust(hClustering, lab = rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
dataFrame = data.frame(x=x, y=y)
set.seed(143)
dataMatrix = as.matrix(dataFrame[sample(1:12),)]
dataMatrix = as.matrix(dataFrame)[sample(1:12),]
heatmap(dataMatrix)
dataMatrix
et.seed(1234)\
set.seed(1234)
par(mar=c(0,0,0,0))
x = rnorm(12,mean=rep(1:3, each=4),sd=.2)
y <- rnorm(12, mean = rep(c(1, 2, 1), each = 4), sd = 0.2)
dataFrame = data.frame(x,y)
kmeansObj = kmeans(dataFrame, centers=3)
names(kmeansObj)
kmeansObj$cluster
kmeansObj$centers
?par
par(mar=rep(.2,4))
plot(x,y,col=kmeansObj$cluster, pch=19, cex=2)
points(kmeansObj$centers, col=1:3, pch=3, cex=3, lwd=3)
dataMatrix = as.matrix(dataFrame)[sample(1:12),]
kmeansObj2 = kmeans(dataMatrix, centers=3)
points(kmeansObj2$centers, col=1:3, pch=3, cex=3, lwd=3)
plot(x,y,col=kmeansObj2$cluster, pch=19, cex=2)
dataMatrix
dataMatrix$x
dataMatrix[1,]
dataMatrix[,1]
plot(dataMatrix[,1],dataMatrix{,2},col=kmeansObj2$cluster, pch=19, cex=2)
plot(dataMatrix[,1],dataMatrix[,2],col=kmeansObj2$cluster, pch=19, cex=2)
points(kmeansObj2$centers, col=1:3, pch=3, cex=3, lwd=3)
par(mfrow=c(1,2), mar = c(2,4,.1,.1))
image(t(dataMatrix)[,nrow(dataMatrix):1],yaxt="n")
image(t(dataMatrix)[, order(kmeansObj2$cluster)],yaxt="n")
kmeansObj2
kmeansObj2$cluster
set.seed(12345)
par(mar = rep(.2,4))
dataMatrix = matrix(rnorm(400),nrow(40))
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
?t
dataMatrix
t(dataMatrix)
matrix(rnorm(400),nrow(40))
dataMatrix = matrix(rnorm(400),nrow=40)
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
par(mar = rep(.2,4))
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
par(mar = rep(.2,4))
heatmap(dataMatrix)
set.seed(678910)
for (i in 1:40) {
# flip a coin
coinFlip <- rbinom(1, size = 1, prob = 0.5)
# if coin is heads add a common pattern to that row
if (coinFlip) {
dataMatrix[i, ] <- dataMatrix[i, ] + rep(c(0, 3), each = 5)
}
}
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
heatmap(dataMatrix)
hh <- hclust(dist(dataMatrix))
dataMatrixOrdered <- dataMatrix[hh$order, ]
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered), 40:1, , xlab = "Row Mean", ylab = "Row", pch = 19)
plot(colMeans(dataMatrixOrdered), xlab = "Column", ylab = "Column Mean", pch = 19)
rep(c(0,3),each=5)
svd1 <- svd(scale(dataMatrixOrdered))
par(mfrow = c(1, 3))
image(t(dataMatrixOrdered)[, nrow(dataMatrixOrdered):1])
plot(svd1$u[, 1], 40:1, , xlab = "Row", ylab = "First left singular vector",
pch = 19)
plot(svd1$v[, 1], xlab = "Column", ylab = "First right singular vector", pch = 19)
par(mfrow = c(1, 2))
plot(svd1$d, xlab = "Column", ylab = "Singular value", pch = 19)
plot(svd1$d^2/sum(svd1$d^2), xlab = "Column", ylab = "Prop. of variance explained",
pch = 19)
colors()
pal = colorRampe(c("red","blue"))
pal = colorRamp(c("red","blue"))
pal(.5)
pal(seq(0,1,len=10))
setwd("~/Learning/exdata/ExData_Plotting2")
library(data.table)
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI=data.table(NEI)
total_emissions=NEI[,sum(Emissions),by=year]
barplot(total_emissions[,V1]/1000000,names.arg=total_emissions[,year],col="blue",main="Total US emissions",ylab="Emission in millions")
